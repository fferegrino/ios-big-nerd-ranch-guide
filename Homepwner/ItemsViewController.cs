// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;

namespace Homepwner
{
	public partial class ItemsViewController : UITableViewController
	{
		public ItemStore ItemStore { get; set; }

		public ItemsViewController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			var statusBarHeight = UIApplication.SharedApplication.StatusBarFrame.Height;

			var insets = new UIEdgeInsets( statusBarHeight, 0, 0, 0);
			TableView.ContentInset = insets;
			TableView.ScrollIndicatorInsets = insets;
		}

		public override nint RowsInSection(UITableView tableView, nint section)
		{
			return ItemStore.AllItems.Count +1;
		}

		public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
		{
			if (indexPath.Row < ItemStore.AllItems.Count)
			{
				var cell = tableView.DequeueReusableCell("UITableViewCell", indexPath);
				var item = ItemStore.AllItems[indexPath.Row];

				cell.TextLabel.Text = item.Name;
				cell.DetailTextLabel.Text = item.ValueInDollars.ToString();

				return cell;
			}
			else
			{
				return tableView.DequeueReusableCell("NoMoreItemsCellView", indexPath);
			}

		}

		[Action("AddNewItem:")]
		void AddNewItem(Foundation.NSObject sender)
		{
			var newItem = ItemStore.CreateItem();
			var indexPath = NSIndexPath.FromItemSection(ItemStore.AllItems.Count -1, 0);
			TableView.InsertRows(new[] { indexPath }, UITableViewRowAnimation.Automatic);
		}

		[Action("ToggleEditingMode:")]
		void ToggleEditingMode(Foundation.NSObject sender)
		{
			var sndr = sender as UIButton;
			if (Editing)
			{
				sndr.SetTitle("Edit", UIControlState.Normal);

				SetEditing(false, true);
			}
			else
			{
				sndr.SetTitle("Done", UIControlState.Normal);

				SetEditing(true, true);
			}
		}

		public override bool CanEditRow(UITableView tableView, NSIndexPath indexPath)
		{
			return indexPath.Row != ItemStore.AllItems.Count;
		}

		public override void CommitEditingStyle(UITableView tableView, UITableViewCellEditingStyle editingStyle, NSIndexPath indexPath)
		{
			if (editingStyle == UITableViewCellEditingStyle.Delete)
			{
				var item = ItemStore.AllItems[indexPath.Row];
				ItemStore.RemoveItem(item);

				tableView.DeleteRows(new NSIndexPath[] { indexPath }, UITableViewRowAnimation.Automatic);
			}
		}

		public override bool CanMoveRow(UITableView tableView, NSIndexPath indexPath)
		{
			return indexPath.Row != ItemStore.AllItems.Count;
		}

		public override void MoveRow(UITableView tableView, NSIndexPath sourceIndexPath, NSIndexPath destinationIndexPath)
		{
			ItemStore.MoveItem(sourceIndexPath.Row, destinationIndexPath.Row);
		}
	}
}
